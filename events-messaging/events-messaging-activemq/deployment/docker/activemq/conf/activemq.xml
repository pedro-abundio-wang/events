<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>file:${activemq.conf}/credentials.properties</value>
        </property>
    </bean>

    <!-- Allows accessing the server log -->
    <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
          lazy-init="false" scope="singleton"
          init-method="start" destroy-method="stop">
    </bean>

    <!-- IMPORTANT added schedulerSupport="true"-->
    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="localhost" dataDirectory="${activemq.data}" schedulerSupport="true">
        <!-- IMPORTANT added plugins section -->
        <plugins>
            <redeliveryPlugin fallbackToDeadLetter="true" sendToDlqIfMaxRetriesExceeded="true">
                <redeliveryPolicyMap>
                    <redeliveryPolicyMap>
                        <redeliveryPolicyEntries>
                            <!-- the fallback policy for all other destinations -->
                            <redeliveryPolicy
                                    queue="np.test"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.routing"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.webpush"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.safaripush"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email-gateway"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email-gateway-critical"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email-gateway-failure"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email-gateway-critical-failure"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email-daily"
                                    maximumRedeliveries="6"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email-weekly"
                                    maximumRedeliveries="6"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.email-monthly"
                                    maximumRedeliveries="6"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                            <redeliveryPolicy
                                    queue="np.mattermost"
                                    maximumRedeliveries="2"
                                    initialRedeliveryDelay="10000"
                                    backOffMultiplier="3"
                                    maximumRedeliveryDelay="-1"
                                    useExponentialBackOff="true"
                            />
                        </redeliveryPolicyEntries>
                    </redeliveryPolicyMap>
                </redeliveryPolicyMap>
            </redeliveryPlugin>
        </plugins>

        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry topic=">" >
                        <!-- The constantPendingMessageLimitStrategy is used to prevent
                             slow topic consumers to block producers and affect other consumers
                             by limiting the number of messages that are retained
                             For more information, see:
                             http://activemq.apache.org/slow-consumer-handling.html
                        -->
                        <pendingMessageLimitStrategy>
                            <constantPendingMessageLimitStrategy limit="1000"/>
                        </pendingMessageLimitStrategy>
                    </policyEntry>

                    <policyEntry queue="np.test">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.routing">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.webpush">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.safaripush">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email-gateway">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix="-failure" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email-gateway-critical">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix="-failure" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email-gateway-failure">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email-gateway-critical-failure">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email-daily">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email-weekly">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.email-monthly">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="np.mattermost">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix="" queueSuffix=".dlq" useQueueForQueueMessages="true"/>
                        </deadLetterStrategy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>


        <!--
            The managementContext is used to configure how ActiveMQ is exposed in
            JMX. By default, ActiveMQ uses the MBean server that is started by
            the JVM. For more information, see:
            http://activemq.apache.org/jmx.html
        -->
        <managementContext>
            <managementContext createConnector="false"/>
        </managementContext>

        <!--
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag).
            For more information, see:
            http://activemq.apache.org/persistence.html
        -->
        <persistenceAdapter>
            <kahaDB directory="${activemq.data}/kahadb"/>
        </persistenceAdapter>


        <!--
          The systemUsage controls the maximum amount of space the broker will
          use before disabling caching and/or slowing down producers. For more information, see:
          http://activemq.apache.org/producer-flow-control.html
        -->
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap="70" />
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="100 gb"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="50 gb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:
            http://activemq.apache.org/configuring-transports.html
        -->
        <transportConnectors>
            <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
            <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="amqp" uri="amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="stomp" uri="stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="mqtt" uri="mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="ws" uri="ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
        </transportConnectors>

        <!-- destroy the spring context on shutdown to stop jetty -->
        <shutdownHooks>
            <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
        </shutdownHooks>

    </broker>

    <!--
        Enable web consoles, REST and Ajax APIs and demos
        The web consoles requires by default login, you can disable this in the jetty.xml file
        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
    -->
    <import resource="jetty.xml"/>
</beans>
